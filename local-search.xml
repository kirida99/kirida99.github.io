<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>第三周作业</title>
    <link href="/2022/08/13/%E7%AC%AC%E4%B8%89%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/08/13/%E7%AC%AC%E4%B8%89%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><h1 id="1-基于nexus3的yum私有仓库的实现"><a href="#1-基于nexus3的yum私有仓库的实现" class="headerlink" title="1.基于nexus3的yum私有仓库的实现"></a>1.基于nexus3的yum私有仓库的实现</h1><h2 id="1-1-nexus3介绍"><a href="#1-1-nexus3介绍" class="headerlink" title="1.1 nexus3介绍"></a>1.1 nexus3介绍</h2><p>Nexus 是一个强大的maven仓库管理器，它极大地简化了本地内部仓库的维护和外部仓库的访问。</p><p>不仅如此，他还可以用来创建yum、pypi、npm、docker、nuget、rubygems 等各种私有仓库。</p><p>所支持的类型，可从下图管窥：</p><p><img src="http://t.eryajf.net/imgs/2021/09/b73cb089b60ab885.jpg" alt="img"></p><p>如果使用了公共的 Maven 仓库服务器，可以从 Maven 中央仓库下载所需要的构件（Artifact），但这通常不是一个好的做法。 正常做法是在本地架设一个 Maven 仓库服务器，即利用 Nexus 私服可以只在一个地方就能够完全控制访问和部署在你所维护仓库中的每个 Artifact。 Nexus 在代理远程仓库的同时维护本地仓库，以降低中央仓库的负荷, 节省外网带宽和时间，Nexus 私服就可以满足这样的需要。 Nexus 是一套 “开箱即用” 的系统不需要数据库，它使用文件系统加 Lucene 来组织数据。 Nexus 使用 ExtJS 来开发界面，利用 Restlet 来提供完整的 REST APIs，通过 m2eclipse 与 Eclipse 集成使用。 Nexus 支持 WebDAV 与 LDAP 安全身份认证。 Nexus 还提供了强大的仓库管理功能，构件搜索功能，它基于 REST，友好的 UI 是一个 extjs 的 REST 客户端，它占用较少的内存，基于简单文件系统而非数据库</p><h2 id="1-2docker安装部署nexus3"><a href="#1-2docker安装部署nexus3" class="headerlink" title="1.2docker安装部署nexus3"></a>1.2docker安装部署nexus3</h2><p>创建docker挂载目录并添加权限</p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/data/</span>nexus  <span class="hljs-comment">#创建挂载目录</span><br><br>chown -R <span class="hljs-number">200</span> <span class="hljs-regexp">/data/</span>nexus  <span class="hljs-comment">#添加对应权限</span><br></code></pre></td></tr></table></figure><p>下载docker并运行</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> docker-io<br><br>systemctl start docker<br></code></pre></td></tr></table></figure><p>下载镜像并运行</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker pull sonatype/nexus3<br><br>docker run -d -p <span class="hljs-number">8081</span>:<span class="hljs-number">8081</span> --name nexus -v <span class="hljs-regexp">/data/</span>nexus:<span class="hljs-regexp">/nexus-data sonatype/</span>nexus3<br></code></pre></td></tr></table></figure><p>浏览器访问nexus</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>&#123;本机ip&#125;:<span class="hljs-number">8081</span><br></code></pre></td></tr></table></figure><p>初次进入需要登录账户名默认为admin 密码存储于/data/nexus/admin-password下</p><p>初次登录后需修改密码，密码可自行设置</p><p><img src="image-20220813214019896.png" alt="image-20220813214019896"></p><h2 id="1-3-创建blob存储"><a href="#1-3-创建blob存储" class="headerlink" title="1.3 创建blob存储"></a>1.3 创建blob存储</h2><p>为yum仓库创建一个单独的存储空间，命名为<code>yum-hub</code></p><p><img src="image-20220813214233882.png" alt="image-20220813214233882"></p><p><img src="image-20220813214308879.png" alt="image-20220813214308879"></p><p>类型选择file 名字填写 yum-hub</p><p><img src="image-20220813214340393.png" alt="image-20220813214340393"></p><p><img src="image-20220813214647174.png" alt="image-20220813214647174"></p><p><img src="image-20220813214723753.png" alt="image-20220813214723753"></p><p>创建完成后可以看到yum-hub</p><h2 id="1-4创建不同类型yum库"><a href="#1-4创建不同类型yum库" class="headerlink" title="1.4创建不同类型yum库"></a>1.4创建不同类型yum库</h2><p>分别创建hosted，proxy，group三种类型的yum库</p><p><img src="image-20220813215030659.png" alt="image-20220813215030659"></p><p><img src="image-20220813215106200.png" alt="image-20220813215106200"></p><p>创建hosted类型的yum库</p><ul><li><code>Name</code>:：定义一个名称local-yum</li><li><code>Storage</code>：Blob store，我们下拉选择前面创建好的专用blob：yum-hub。</li><li><code>Hosted</code>：开发环境，我们运行重复发布，因此Delpoyment policy 我们选择Allow redeploy。这个很重要</li></ul><p><img src="image-20220813215459013.png" alt="image-20220813215459013"></p><p>创建proxy类型的yum库</p><ul><li><code>Name</code>: proxy-163-yum</li><li><code>Proxy</code>：Remote Storage: 远程仓库地址，这里填写: <a href="http://mirrors.163.com/centos/">http://mirrors.163.com/centos/</a></li><li><code>Storage</code>: yum-hub</li></ul><p><img src="image-20220813220150406.png" alt="image-20220813220150406"></p><p>创建group类型的yum库</p><ul><li><code>Name</code>：group-yum</li><li><code>Storage</code>：选择专用的blob存储yum-hub。</li><li><code>group</code> : 将左边可选的2个仓库，添加到右边的members下</li></ul><p><img src="image-20220813220451105.png" alt="image-20220813220451105"></p><p>全部配置完成后去设置yum源</p><h2 id="1-5构建本地yum缓存"><a href="#1-5构建本地yum缓存" class="headerlink" title="1.5构建本地yum缓存"></a>1.5构建本地yum缓存</h2><p>将原有的yum源移走</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@k10 ~]<span class="hljs-comment"># cd /etc/yum.repos.d/</span><br>[root@k10 yum.repos.d] <span class="hljs-keyword">mkdir</span> bak <br>[root@k10 yum.repos.d] mv ./*.repo bak/<br><br></code></pre></td></tr></table></figure><p>创建一个新的yum源，并添加下面的内容</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/yum</span>.repo.d/nexus.repo<br><br>[nexus]<br>name=Nexus3<br>baseurl=http:<span class="hljs-regexp">//</span><span class="hljs-number">172.31</span>.<span class="hljs-number">20.10</span>:<span class="hljs-number">8081</span><span class="hljs-regexp">/repository/g</span>roup-yum<span class="hljs-regexp">/7/</span>os<span class="hljs-regexp">/$basearch/</span><br>enable=<span class="hljs-number">1</span><br>gpgcheck=<span class="hljs-number">0</span><br><br><span class="hljs-comment">#released updates</span><br>[updates]<br>name=CentOS-<span class="hljs-number">7</span>-Updates-<span class="hljs-number">163</span>.com<br><span class="hljs-comment">#mirrorlist=http://mirrorlist.centos.org/?release=7&amp;arch=$basearch&amp;repo=updates</span><br>baseurl=http:<span class="hljs-regexp">//mi</span>rrors.<span class="hljs-number">163</span>.com<span class="hljs-regexp">/centos/</span><span class="hljs-number">7</span><span class="hljs-regexp">/updates/</span><span class="hljs-variable">$basearch</span>/<br>gpgcheck=<span class="hljs-number">1</span><br>gpgkey=http:<span class="hljs-regexp">//mi</span>rrors.<span class="hljs-number">163</span>.com<span class="hljs-regexp">/centos/</span>RPM-GPG-KEY-CentOS-<span class="hljs-number">7</span><br> <br><span class="hljs-comment">#additional packages that may be useful</span><br>[extras]<br>name=CentOS-<span class="hljs-number">7</span>-Extras-<span class="hljs-number">163</span>.com<br><span class="hljs-comment">#mirrorlist=http://mirrorlist.centos.org/?release=7&amp;arch=$basearch&amp;repo=extras</span><br>baseurl=http:<span class="hljs-regexp">//mi</span>rrors.<span class="hljs-number">163</span>.com<span class="hljs-regexp">/centos/</span><span class="hljs-number">7</span><span class="hljs-regexp">/extras/</span><span class="hljs-variable">$basearch</span>/<br>gpgcheck=<span class="hljs-number">1</span><br>gpgkey=http:<span class="hljs-regexp">//mi</span>rrors.<span class="hljs-number">163</span>.com<span class="hljs-regexp">/centos/</span>RPM-GPG-KEY-CentOS-<span class="hljs-number">7</span><br> <br><span class="hljs-comment">#additional packages that extend functionality of existing packages</span><br>[centosplus]<br>name=CentOS-<span class="hljs-number">7</span>-Plus-<span class="hljs-number">163</span>.com<br>baseurl=http:<span class="hljs-regexp">//mi</span>rrors.<span class="hljs-number">163</span>.com<span class="hljs-regexp">/centos/</span><span class="hljs-number">7</span><span class="hljs-regexp">/centosplus/</span><span class="hljs-variable">$basearch</span>/<br>gpgcheck=<span class="hljs-number">1</span><br>enabled=<span class="hljs-number">0</span><br>gpgkey=http:<span class="hljs-regexp">//mi</span>rrors.<span class="hljs-number">163</span>.com<span class="hljs-regexp">/centos/</span>RPM-GPG-KEY-CentOS-<span class="hljs-number">7</span> <br></code></pre></td></tr></table></figure><p>构建缓存，确认下group-yum下是否存在包</p><p><img src="image-20220813222000925.png" alt="image-20220813222000925"></p><p>机器上执行操作，确认已经有数据了</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@k10 yum.repos.d]<span class="hljs-comment"># yum clean all</span><br><br>[root@k10 yum.repos.d]<span class="hljs-comment"># yum makecache </span><br><br>[root@k10 yum.repos.d]<span class="hljs-comment"># yum repolist</span><br>已加载插件：fastestmirror, product-id, search-disabled-repos, subscription-manager<br><br>This system <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> registered <span class="hljs-keyword">with</span> an entitlement server. You can use subscription-manager <span class="hljs-keyword">to</span> register.<br><br>Loading mirror speeds <span class="hljs-keyword">from</span> cached hostfile<br>源标识                                                                                                                                                           源名称                                                                                                                                                                      状态<br>extras/x86_64                                                                                                                                                    CentOS-<span class="hljs-number">7</span>-Extras-<span class="hljs-number">163.com</span>                                                                                                                                                        <span class="hljs-number">512</span><br>nexus/x86_64                                                                                                                                                     Nexus3                                                                                                                                                                      <span class="hljs-number">10</span>,<span class="hljs-number">072</span><br>updates/x86_64                                                                                                                                                   CentOS-<span class="hljs-number">7</span>-Updates-<span class="hljs-number">163.com</span>                                                                                                                                                     <span class="hljs-number">4</span>,<span class="hljs-number">101</span><br>repolist: <span class="hljs-number">14</span>,<span class="hljs-number">685</span><br><br></code></pre></td></tr></table></figure><p>返回页面上查看也有数据存在了</p><p><img src="image-20220813232815277.png" alt="image-20220813232815277"></p><p>离线环境下载软件包测试，正常安装</p><p><img src="image-20220813233221958.png" alt="image-20220813233221958"></p><h1 id="2-TCP协议和三次握手及四次挥手"><a href="#2-TCP协议和三次握手及四次挥手" class="headerlink" title="2.TCP协议和三次握手及四次挥手"></a>2.TCP协议和三次握手及四次挥手</h1><h2 id="2-1-三次握手"><a href="#2-1-三次握手" class="headerlink" title="2.1 三次握手"></a>2.1 三次握手</h2><p><img src="image-20220814004217308.png" alt="image-20220814004217308"></p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs axapta">SYN请求号标记位<br>ACK确认号标记位<br>seq序号，代表请求方将会发送的数据的第一个字节编号<br>ack返回的确认号，代表接收方收到收据后（也就是前面说的seq），代表希望对方下一次传输数据的第一个字节编号<br><br>CLOSED<span class="hljs-keyword">client</span>处于关闭状态<br>LISTEN<span class="hljs-keyword">server</span>处于监听状态，等待<span class="hljs-keyword">client</span>连接<br>SYN-RCVD表示<span class="hljs-keyword">server</span>接受到了SYN报文，当收到<span class="hljs-keyword">client</span>的ACK报文后，它会进入到ESTABLISHED状态<br>SYN-SENT表示<span class="hljs-keyword">client</span>已发送SYN报文，等待<span class="hljs-keyword">server</span>的第<span class="hljs-number">2</span>次握手<br>ESTABLISHED表示连接已经建立<br></code></pre></td></tr></table></figure><p>第一次握手：客户端第一次发送一条连接请求数据，SYN = 1，ACK = 0就是代表建立连接请求，发送的具体数据第一个字节编号记为x，赋值seq。</p><p>第二次握手：服务端收到请求后，返回 客户端的SYN = 1,加上自己的确认号ACK=1,发送的具体数据第一个字节编号记为y，赋值seq，希望客户端下一次返回编号x + 1个字节为止的数据，记为ack = x + 1。</p><p>客户端得出客户端发送接收能力正常，服务端发送接收能力也都正常，但是此时服务器并不能确认客户端的接收能力是否正常</p><p>第三次握手：客户端收到服务端返回的请求确认后，再次发送数据，原封不动返回ACK = 1,这里就不需要再发送 SYN=1了，为什么呢？因为此时并不是跟服务端进行连接请求，而是连接确认，所以只需要返回ACK = 1代表确认，同样的，发送的具体数据第一个字节编号记为seq = x + 1，希望服务端下次传输的数据第一个字节编号记为ack = y + 1</p><p>为什么TCP建立连接时候，要进行3次握手，2次不行吗？<br>一句话的答案：主要目的:防止server端一直等待，浪费资源，</p><p>如果建立连接只需要2次握手，可能会出现的情况<br>假设client发出的第一个连接请求报文段，因为网络延迟，在连接释放以后的某个时间才到达server 。<br>本来这是一个早已失效的连接请求，但server收到此失效的请求后，误认为是client再次发出的一个新的连接请求 。<br>于是server就向client发出确认报文段，同意建立连接。<br>如果不采用“3次握手”，那么只要server发出确认，新的连接就建立了 。<br>由于现在client并没有真正想连接服务器的意愿，因此不会理睬server的确认，也不会向server发送数据 。<br>但server却以为新的连接已经建立，并一直等待client发来数据，这样，server的很多资源就白白浪费掉了<br>采用“三次握手”的办法可以防止上述现象发生 ，例如上述情况，client没有向server的确认发出确认，server由于收不到确认，就知道client并没有要求建立连接。</p><h2 id="2-2四次挥手"><a href="#2-2四次挥手" class="headerlink" title="2.2四次挥手"></a>2.2四次挥手</h2><p><img src="image-20220814005659467.png" alt="image-20220814005659467"></p><p>第一次挥手：Client发送一个FIN，用来关闭Client到Server的数据传送，Client进入FIN_WAIT_1状态。<br>第二次挥手：Server收到FIN后，发送一个ACK给Client，确认序号为收到序号+1（与SYN相同，一个FIN占用一个序号），Server进入CLOSE_WAIT状态。<br>第三次挥手：Server发送一个FIN，用来关闭Server到Client的数据传送，Server进入LAST_ACK状态。<br>第四次挥手：Client收到FIN后，Client进入TIME_WAIT状态，接着发送一个ACK给Server，确认序号为收到序号+1，Server进入CLOSED状态，完成四次挥手</p><p>为什么建立连接是三次握手，关闭连接确是四次挥手呢？<br>建立连接的时候， 服务器在LISTEN状态下，收到建立连接请求的SYN报文后，把ACK和SYN放在一个报文里发送给客户端。<br>而关闭连接时，服务器收到对方的FIN报文时，仅仅表示对方不再发送数据了但是还能接收数据，而自己也未必全部数据都发送给对方了，所以己方可以立即关闭，也可以发送一些数据给对方后，再发送FIN报文给对方来表示同意现在关闭连接，因此，己方ACK和FIN一般都会分开发送，从而导致多了一次。为了确保正确关闭连接，所以需要四次。</p><p>TIME_WAIT状态有什么作用，为什么主动关闭方没有直接进入CLOSED状态释放资源？<br>答：防止连接关闭时四次挥手中的最后一次ACK丢失：如果主动关闭方进入CLOSED状态后，被动关闭方发送FIN包后没有得到ACK确认，超时后就会重传一个FIN包。如果客户端没有TIME_WAIT状态而直接进入CLOSED状态释放资源，下次启动新的客户端就可能使用了与之前客户端相同的地址信息，有两个危害，第一种是这个刚启动的新的客户端绑定地址成功时，就会收到了一个重传的FIN包，对新连接就会造成影响。第二种是如果该新客户端向相同的服务端发送SYN连接请求，但是此时服务端处于LAST_ACK状态，要求收到的是ACK而不是SYN，因此就会发送RST重新建立请求。</p><p>为什么TIME_WAIT状态需要经过2MSL才能进入CLOSE状态?<br>答：MSL指的是报文在网络中最大生存时间。在客户端发送对服务端的FIN确认包ACK后，这个ACK包有可能到达不了，服务器端如果接收不到ACK包就会重新发送FIN包。所以客户端发送ACK后需要留出2MSL时间（ACK到达服务器器+服务器发送FIN重传包，一来一回）等待确认服务器端缺失收到了ACK包。也就是说客户端如果等待2MSL时间也没收到服务器端重传的FIN包，则就可以确认服务器已经收到客户端发送的ACK包</p><p>这周有点忙，剩余的作业后面的会补全！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第二周作业</title>
    <link href="/2022/08/07/%E7%AC%AC%E4%BA%8C%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/08/07/%E7%AC%AC%E4%BA%8C%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<p>作业要求</p><p>完成一个shell脚本，脚本的作用。</p><ol><li>运行脚本可以显示出本机的ip地址</li><li>如果ip地址中有3这个数字，那么就打印出当前的系统时间</li><li>如果ip地址中不含3这个数字，就批量建立用户magedu_00, magedu_01, … magedu_100并且所有用户同属于magedu组</li><li>打印出/etc/passwd这个文件中可以登陆的用户（非/usr/sbin/nologin）</li><li>yum安装nginx服务，并且启动该服务</li><li>一个脚本完成</li></ol><p>脚本文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#*********************************************************</span><br><span class="hljs-comment">#Author:         kongcg</span><br><span class="hljs-comment">#tel:            18676223897</span><br><span class="hljs-comment">#Date:           2022-08-07</span><br><span class="hljs-comment">#Description     The test script</span><br><span class="hljs-comment">#*********************************************************</span><br><span class="hljs-function"><span class="hljs-title">hostIP</span></span>()&#123;<br>ipaddr=`hostname -I | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>`<br>num=3<br><span class="hljs-built_in">date</span>=`<span class="hljs-built_in">date</span> +%F%n%T`<br><span class="hljs-built_in">echo</span> -e IPADDR=<span class="hljs-variable">$ipaddr</span><br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$ipaddr</span> == *<span class="hljs-variable">$num</span>* ]] <br><span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> -e IP中存在数字3打印系统时间<br><span class="hljs-built_in">echo</span> -e  <span class="hljs-built_in">date</span>=<span class="hljs-variable">$date</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">echo</span> -e IP中不存在数字3开始创建用户<br>grep <span class="hljs-string">&#x27;magedu&#x27;</span> /etc/group &gt;/dev/null 2&gt;/dev/null<br>[ $? -eq 0 ] || groupadd magedu &gt;/dev/null 2&gt;/dev/null<br> <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `<span class="hljs-built_in">seq</span> 100`<br><span class="hljs-keyword">do</span><br><span class="hljs-built_in">id</span> magedu_<span class="hljs-variable">$i</span> &gt;/dev/null 2&gt;/dev/null; <br>[ $? -eq 0 ] &amp;&amp; <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;[\033[31merror\033[0m]User magedu_<span class="hljs-variable">$i</span> is exist.&quot;</span> &amp;&amp; <span class="hljs-built_in">continue</span>;<br>useradd -G magedu magedu_<span class="hljs-variable">$i</span> &gt;/dev/null 2&gt;/dev/null;<br><br><span class="hljs-keyword">done</span><br><span class="hljs-keyword">fi</span><br>&#125;<br><span class="hljs-function"><span class="hljs-title">users</span></span>()&#123;<br>user=$(awk -F: <span class="hljs-string">&#x27;/bash$/&#123;print $1&#125;&#x27;</span> /etc/passwd)<br><span class="hljs-built_in">echo</span>  -e  文件中可登录用户如下<br><span class="hljs-built_in">echo</span>  -e   <span class="hljs-variable">$user</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">installnginx</span></span>()&#123;<br>systemctl stop firewalld<br>setenforce 0<br>yum  install  nginx<br><span class="hljs-keyword">if</span> [ $? -eq 0 ];<span class="hljs-keyword">then</span><br>systemctl start  nginx<br><span class="hljs-keyword">elif</span>  [ $? -eq 0 ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;启动成功&quot;</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;安装或启动失败&quot;</span><br><span class="hljs-keyword">fi</span><br><br>&#125;<br><br>. /etc/init.d/functions<br><span class="hljs-built_in">echo</span> -en <span class="hljs-string">&quot;\E[$[RANDOM%7+31];1m&quot;</span><br><span class="hljs-built_in">cat</span> &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">请选择：</span><br><span class="hljs-string">1）查看IP地址,如果ip地址中有3这个数字，那么就打印出当前的系统时间,否则批量建立用户magedu_00, magedu_01, ... magedu_100并且所有用户同属于magedu组</span><br><span class="hljs-string">2）打印/etc/passwd这个文件中可以登陆的用户</span><br><span class="hljs-string">3）安装启动nginx服务</span><br><span class="hljs-string">EOF</span><br><span class="hljs-built_in">echo</span> -en <span class="hljs-string">&#x27;\E[0m&#x27;</span><br><span class="hljs-built_in">read</span> -p  <span class="hljs-string">&quot;请选择上面项对应的数字1-3: &quot;</span> MENU<br>[ <span class="hljs-variable">$MENU</span> -eq 1 ] &amp;&amp; hostIP<br>[ <span class="hljs-variable">$MENU</span> -eq 2 ] &amp;&amp; <span class="hljs-built_in">users</span><br>[ <span class="hljs-variable">$MENU</span> -eq 3 ] &amp;&amp; installnginx<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第一周作业</title>
    <link href="/2022/07/30/%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/07/30/%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="1-图文并茂解释开源许可证-GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？"><a href="#1-图文并茂解释开源许可证-GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？" class="headerlink" title="1. 图文并茂解释开源许可证 GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？"></a>1. 图文并茂解释开源许可证 GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？</h1><p>GPL 开源许可证：允许任何人观看、修改，并散播程序软件里的原始程序码，条件是如果你要发布修改后的版本就要连源代码一起公布，不允许修改后和衍生的代码做为闭源的商业软件发布和销售，Linux就是采用了GPL协议，GPL严格要求使用了GPL类库的软件产品必须使用GPL协议，对于使用GPL协议的开源代码，商业软件或者对代码有保密要求的部门就不适合集成/采用作为类库和二次开发的基础</p><p>BSD开源许可证：BSD许可证使用者可以商业集成很友好的协议，允许使用者自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布，但要满足三个要求（1）如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议（2）如果再发布的只是二进制类库/软件，则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议（3）不可以用开源代码的作者、机构名字和原来产品的名字做市场推广</p><p>MIT开源许可证：MIT是和BSD一样宽范的许可协议。你必须在你的发行版里包含原许可协议的声明，无论你是以二进制发布的还是以源代码发布的。作者只想保留版权，而无任何其他了限制，较BSD协议宽松</p><p>Mozilla开源许可证： 允许免费重发布、免费修改，但要求修改后的代码版权归软件的发起者。要求所有再发布者都得有一个专门的文件就对源代码程序修改的时间和修改的方式有描述。允许一个企业在自己已有的源代码库上加一个接口，除了接口程序的源代码以MPL 许可证的形式对外许可外，源代码库中的源代码就可以不用MPL许可证的方式强制对外许可</p><p>Apache开源许可证：由著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布（作为开源或商业软件）需要满足4个要求（1）需要给代码的用户一份Apache 许可证 （2）如果修改了代码，需要再被修改的文件中说明 （3）在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明 （4）如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改</p><p>LGPL开源许可证：LGPL 允许以动态链接使用开源库。采用LGPL的代码，一般情况下它本身就是一个第三方库（LGPL最早的名字就是Library GPL），这时候开发人员仅仅用到了它的功能，而没有对库本身进行任何修改，那么开发人员也不必公布自己的商业源代码。但是如果修改LGPL协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须开源，并且采用LGPL协议</p><p><img src="image-20220730143711092.png" alt="image-20220730143711092"></p><h1 id="2-安装各发行版系统的安装-centos-rockylinux-ubuntu-等"><a href="#2-安装各发行版系统的安装-centos-rockylinux-ubuntu-等" class="headerlink" title="2.安装各发行版系统的安装(centos, rockylinux, ubuntu, 等)"></a>2.安装各发行版系统的安装(centos, rockylinux, ubuntu, 等)</h1><h3 id="1-centos7安装流程"><a href="#1-centos7安装流程" class="headerlink" title="1.centos7安装流程"></a>1.centos7安装流程</h3><h4 id="1-1下载镜像文件"><a href="#1-1下载镜像文件" class="headerlink" title="1.1下载镜像文件"></a>1.1下载镜像文件</h4><p>阿里的镜像：<a href="https://mirrors.aliyun.com/centos/7/isos/x86_64/">https://mirrors.aliyun.com/centos/7/isos/x86_64/</a></p><p><img src="1659168928036-d2538131-af51-4c73-ac56-b478f395a2fc.png" alt="img"></p><p>选择DVD-2009.iso文件进行下载，可以选择使用迅雷下载速度会比较快</p><p>下载链接：<a href="https://mirrors.aliyun.com/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-2009.iso?spm=a2c6h.25603864.0.0.74092d1cHCOZxe">https://mirrors.aliyun.com/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-2009.iso?spm=a2c6h.25603864.0.0.74092d1cHCOZxe</a></p><h4 id="1-2虚拟机安装"><a href="#1-2虚拟机安装" class="headerlink" title="1.2虚拟机安装"></a>1.2虚拟机安装</h4><p>安装使用VMware16进行，下载链接如下</p><p>VMware16 下载地址：<a href="https://download.csdn.net/download/u014644574/75713616">https://download.csdn.net/download/u014644574/75713616</a></p><p>创建虚拟机，配置类型选择典型即可</p><p><img src="1659169174618-eb60cb26-df6c-4eb4-a91a-b2be39221322.png" alt="img"></p><p><img src="1659169199658-fef26176-569b-405e-840d-f4988f148981.png" alt="img"></p><p>将下载好的iso文件填入，点击下一步</p><p><img src="1659169337399-7dcc0c27-278e-4a31-9ce2-5b020a762c4b.png" alt="img"></p><p>根据情况填写对应虚拟机信息，下一步</p><p><img src="1659169423345-f21a1ee3-a13f-474b-9362-be3a76a44595.png" alt="img"></p><p>将虚拟机的位置修改不是系统盘下面，下一步</p><p><img src="1659169488554-760aaeb6-d0fa-4388-8aa0-4f58425e0ff3.png" alt="img">、</p><p>分配磁盘空间的大小，下一步</p><p><img src="1659169568818-1927fead-44ba-40d9-a9dd-98b008ff7f12.png" alt="img"></p><p>选择自定义硬件，将内存，CPU，网络按照具体需要进行分配，改完点击完成即可</p><p><img src="1659169652484-7465e1e0-91e1-4125-8bee-1ceceb38fa72.png" alt="img"></p><p><img src="1659169844366-41447d46-f56c-4baf-a297-c894d6ab3342.png" alt="img"></p><p>之后系统会进行自动检查</p><p><img src="1659169992477-60fed80b-8ad6-4f1c-a5f6-8d616ddd10d6.png" alt="img"></p><p>会自动进入安装页面选择第一个进行安装</p><p><img src="image-20220730195108941.png" alt="image-20220730195108941"></p><p>选择键盘，一般默认即可</p><p><img src="image-20220730195218617.png" alt="image-20220730195218617"></p><p>DATE&amp;TIME，修改为上海时间</p><p><img src="image-20220730195329784.png" alt="image-20220730195329784"></p><p>磁盘不想做分区的话默认</p><p><img src="image-20220730195417752.png" alt="image-20220730195417752"></p><p>安装方式可以选择图形化安装，想最小化安装则无需修改</p><p><img src="image-20220730195513272.png" alt="image-20220730195513272"></p><p>网络开启，主机名根据需要进行修改</p><p><img src="image-20220730195552056.png" alt="image-20220730195552056"></p><p>其他选项不需要修改，开始安装需要修改root密码，注意root密码如果过于简单需要done两次才能成功，user可以不进行创建</p><p><img src="image-20220730195657122.png" alt="image-20220730195657122"></p><p>等待下方任务结束即可完成</p><p><img src="image-20220730195825887.png" alt="image-20220730195825887"></p><p>完成后进行重启</p><p><img src="image-20220730200802918.png" alt="image-20220730200802918"></p><p>首次进入</p><p><img src="image-20220730200847829.png" alt="image-20220730200847829"></p><p>选择第一个接受协议</p><p><img src="image-20220730200931183.png" alt="image-20220730200931183"></p><p><img src="image-20220730201000595.png" alt="image-20220730201000595"></p><p>一路默认即可进入，完成安装</p><p><img src="image-20220730201137245.png" alt="image-20220730201137245"></p><h3 id="1-Ubuntu20-04安装流程"><a href="#1-Ubuntu20-04安装流程" class="headerlink" title="1.Ubuntu20.04安装流程"></a>1.Ubuntu20.04安装流程</h3><p>准备工作与前面一样，直接从安装流程开始    </p><p><img src="image-20220730201336584.png" alt="image-20220730201336584"></p><p>默认选择英文键盘，默认继续</p><p><img src="image-20220730201436991.png" alt="image-20220730201436991"></p><p>默认</p><p><img src="image-20220730201454571.png" alt="image-20220730201454571"></p><p>这里可以进行ip修改不需要修改可以默认</p><p><img src="image-20220730201517427.png" alt="image-20220730201517427"></p><p>默认</p><p><img src="image-20220730201644498.png" alt="image-20220730201644498"></p><p>修改这里的地址为阿里云的地址</p><p><img src="image-20220730201943760.png" alt="image-20220730201943760"></p><p>默认选项</p><p><img src="image-20220730202030764.png" alt="image-20220730202030764"></p><p><img src="image-20220730202106906.png" alt="image-20220730202106906"></p><p>添加用户，设置密码·</p><p><img src="image-20220730202158004.png" alt="image-20220730202158004"></p><p>空格勾选下opensssh服务</p><p><img src="image-20220730202329827.png" alt="image-20220730202329827"></p><p><img src="image-20220730202412710.png" alt="image-20220730202412710"></p><p>等待安装</p><p><img src="image-20220730202443553.png" alt="image-20220730202443553"></p><p>重启</p><p><img src="image-20220730203732839.png" alt="image-20220730203732839"></p><p>登录成功</p><p><img src="image-20220730204001274.png" alt="image-20220730204001274"></p><h1 id="3-Linux中总结，"><a href="#3-Linux中总结，" class="headerlink" title="3.Linux中总结，"></a>3.Linux中总结，</h1><h1 id="1）如何通过一个简短的关键字，例如process-获取相关的命令。"><a href="#1）如何通过一个简短的关键字，例如process-获取相关的命令。" class="headerlink" title="1）如何通过一个简短的关键字，例如process 获取相关的命令。"></a>1）如何通过一个简短的关键字，例如process 获取相关的命令。</h1><p>使用命令不知道具体用法时，可以通过type关键字查看它是外部命令还是内部命令，显示有路径说明是外部命令，显示为shell说明是内部命令</p><p><img src="image-20220730170830864.png" alt="image-20220730170830864"></p><p><img src="image-20220730171026243.png" alt="image-20220730171026243"></p><p>对于内部命令，查看帮助信息输入 “help [命令] ”</p><p><img src="image-20220730171129226.png" alt="image-20220730171129226"></p><p>对于外部命令，查看帮助信息输入 “ [命令] –help”</p><p><img src="image-20220730171226978.png" alt="image-20220730171226978"></p><p>也可以通过“man  [命令]”的方式查看外部命令</p><p><img src="image-20220730171426826.png" alt="image-20220730171426826"></p><h1 id="2）通过命令的描述，选择一个命令，获取命令的man文档。"><a href="#2）通过命令的描述，选择一个命令，获取命令的man文档。" class="headerlink" title="2）通过命令的描述，选择一个命令，获取命令的man文档。"></a>2）通过命令的描述，选择一个命令，获取命令的man文档。</h1><p>例如tail命令，通过type确认tail命令属于外部命令</p><p><img src="image-20220730170830864.png" alt="image-20220730170830864"></p><p>通过“man  tail”的方式查看man的文档</p><p><img src="image-20220730171758402.png" alt="image-20220730171758402"></p><p>tail_man.txt文件内容如下</p><figure class="highlight markdown"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></div></td><td class="code"><pre><code class="hljs markdown">TAIL(1)                                                                                                                                                             FSF                                                                                                                                                            TAIL(1)<br><br><br><br>NAME(名<br><span class="hljs-code">       tail - 输出文件的末尾部分</span><br><span class="hljs-code"></span><br>SYNOPSIS(总<br><span class="hljs-code">       ../src/tail [OPTION]... [FILE]...</span><br><span class="hljs-code"></span><br>DESCRIPTION(描<br><span class="hljs-code">       在标准输出上显示每个FILE的最后10行.  如果多于一个FILE,会一个接一个地显示, 并在每个文件显示的首部给出文件名.  如果没有FILE,或者FILE是-,那么就从标准输入上读取.</span><br><span class="hljs-code"></span><br><span class="hljs-code">       --retry</span><br><span class="hljs-code">              即使tail开始时就不能访问 或者在tail运行后不能访问,也仍然不停地尝试打开文件.  -- 只与-f合用时有用.</span><br><span class="hljs-code"></span><br><span class="hljs-code">       -c, --bytes=N</span><br><span class="hljs-code">              输出最后N个字节</span><br><span class="hljs-code"></span><br><span class="hljs-code">       -f, --follow[=&#123;name|descriptor&#125;]</span><br><span class="hljs-code">              当文件增长时,输出后续添加的数据; -f, --follow以及 --follow=descriptor 都是相同的意思</span><br><span class="hljs-code"></span><br><span class="hljs-code">       -n, --lines=N</span><br><span class="hljs-code">              输出最后N行,而非默认的最后10行</span><br><span class="hljs-code"></span><br><span class="hljs-code">       --max-unchanged-stats=N</span><br><span class="hljs-code">              参看texinfo文档(默认为5)</span><br><span class="hljs-code"></span><br><span class="hljs-code">       --max-consecutive-size-changes=N</span><br><span class="hljs-code">              参看texinfo文档(默认为200)</span><br><span class="hljs-code"></span><br><span class="hljs-code">       --pid=PID</span><br><span class="hljs-code">              与-f合用,表示在进程ID,PID死掉之后结束.</span><br><span class="hljs-code"></span><br><span class="hljs-code">       -q, --quiet, --silent</span><br><span class="hljs-code">              从不输出给出文件名的首部</span><br><span class="hljs-code"></span><br><span class="hljs-code">       -s, --sleep-interval=S</span><br><span class="hljs-code">              与-f合用,表示在每次反复的间隔休眠S秒</span><br><span class="hljs-code"></span><br><span class="hljs-code">       -v, --verbose</span><br><span class="hljs-code">              总是输出给出文件名的首部</span><br><span class="hljs-code"></span><br><span class="hljs-code">       --help 显示帮助信息后退出</span><br><span class="hljs-code"></span><br><span class="hljs-code">       --version</span><br><span class="hljs-code">              输出版本信息后退出</span><br><span class="hljs-code"></span><br><span class="hljs-code">       如果N(字节或者行数)的第一个字符为`+&#x27;, 那么从每个文件的开头算起的第N项开始显示, 否则, 显示该文件的最后N项.  N可以有一个倍数前缀: b表示512,k表示1024,m表示1048576(1兆).  第一个选项 -VALUE 或+VALUE 以-n VALUE或-n +VALUE 方式看待,除非VALUE含有[bkm]后缀倍数 中的一个,在这种情况下,它被看作 -c VALUE 或者-c +VALUE</span><br><span class="hljs-code"></span><br><span class="hljs-code">       使用--follow      (-f)时,tail默认后接文件描述符,      这意味着即使tail显示的文件改名了,tail仍然可以      追踪到其末尾部分.      如果你确实希望查询文件的实际名而非文件描述符     (例如,日志轮转时),     这种默认的操作就不是你所期望的了.      在这种情况下应使用--follow=name.      这将导致tail通过周期性地重新打开所指定的文件来</span><br><span class="hljs-code">       追踪其是否被删除了,或者被其他程序重新创建了.</span><br><span class="hljs-code"></span><br>AUTHOR(作<br><span class="hljs-code">       Paul Rubin, David MacKenzie, Ian Lance Taylor和Jim Meyering.</span><br><span class="hljs-code"></span><br>REPORTING BUGS (报<br><span class="hljs-code">       请报告bugs到&lt;bug-textutils@gnu.org&gt;.</span><br><span class="hljs-code"></span><br>COPYRIGHT(版<br><span class="hljs-code">       Copyright © 1999 Free Software Foundation, Inc.</span><br><span class="hljs-code">       This is free software; see the source for copying conditions.  There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br><span class="hljs-code"></span><br>SEE ALSO (另<br><span class="hljs-code">       tail 的完整文档是以Texinfo手册形式维护的.  如果 info 和 tail 程序在你那儿都已经安装好了,那么命令</span><br><span class="hljs-code"></span><br><span class="hljs-code">              info tail</span><br><span class="hljs-code"></span><br><span class="hljs-code">       应该会让你访问到整篇手册.</span><br><span class="hljs-code"></span><br><br>[中<br><span class="hljs-code">       riser &lt;boomer@ccidnet.com&gt;</span><br><span class="hljs-code"></span><br>[中<br><span class="hljs-code">       2001/08/08</span><br><span class="hljs-code"></span><br>《<br><span class="hljs-code">       http://cmpp.linuxforum.net</span><br><span class="hljs-code"></span><br><br><br>GNU textutils 2.0a                                                                                                                                              1999年12月                                                                                                                                                         TAIL(1)<br><br></code></pre></td></tr></table></figure><h1 id="3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。-lt-gt-…等各代表什么含义。"><a href="#3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。-lt-gt-…等各代表什么含义。" class="headerlink" title="3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。&lt;&gt;, [] …等各代表什么含义。"></a>3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。&lt;&gt;, [] …等各代表什么含义。</h1><p>man文档的内容结构</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-type">Name</span>命令的名称和用途（摘要）<br>Synopsis命令语法（摘要）<br>Description完整描述<br>Environment命令使用的环境变量<br>Author作者<br>Files对该命令重要的文件列表<br>See <span class="hljs-keyword">also</span>查看相关的信息的位置<br><span class="hljs-keyword">Diagnostics</span>可能的错误和警告<br>Bugs错误、缺点、警告<br><br></code></pre></td></tr></table></figure><p>我们在使用man文档查看命令时主要看命令的语法和描述信息已取出的tail命令为例，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">NAME(名<br>       <span class="hljs-built_in">tail</span> - 输出文件的末尾部分  <br></code></pre></td></tr></table></figure><p>表示tail命令是用来输出文件末尾部分</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">SYNOPSIS(总<br>       ../<span class="hljs-attribute">src</span>/tail <span class="hljs-selector-attr">[OPTION]</span>... <span class="hljs-selector-attr">[FILE]</span>...<br></code></pre></td></tr></table></figure><p>表示tail后面可选option选项，但必须有指定查看的文件，可跟多个</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">DESCRIPTION(描<br>       在标准输出上显示每个<span class="hljs-keyword">FILE</span>的最后<span class="hljs-number">10</span>行.  如果多于一个<span class="hljs-keyword">FILE</span>,会一个接一个地显示, 并在每个文件显示的首部给出文件名.  如果没有<span class="hljs-keyword">FILE</span>,或者<span class="hljs-keyword">FILE</span>是-,那么就从标准输入上读取.<br><br>       <span class="hljs-comment">--retry</span><br>              即使tail开始时就不能访问 或者在tail运行后不能访问,也仍然不停地尝试打开文件.  <span class="hljs-comment">-- 只与-f合用时有用.</span><br><br>       -c, <span class="hljs-comment">--bytes=N</span><br>              输出最后N个字节<br><br>       -f, <span class="hljs-comment">--follow[=&#123;name|descriptor&#125;]</span><br>              当文件增长时,输出后续添加的数据; -f, <span class="hljs-comment">--follow以及 --follow=descriptor 都是相同的意思</span><br><br>       -n, <span class="hljs-comment">--lines=N</span><br>              输出最后N行,而非默认的最后<span class="hljs-number">10</span>行<br><br>       <span class="hljs-comment">--max-unchanged-stats=N</span><br>              参看texinfo文档(默认为<span class="hljs-number">5</span>)<br><br>       <span class="hljs-comment">--max-consecutive-size-changes=N</span><br>              参看texinfo文档(默认为<span class="hljs-number">200</span>)<br><br>       <span class="hljs-comment">--pid=PID</span><br>              与-f合用,表示在进程ID,PID死掉之后结束.<br><br>       -q, <span class="hljs-comment">--quiet, --silent</span><br>              从不输出给出文件名的首部<br><br>       -s, <span class="hljs-comment">--sleep-interval=S</span><br>              与-f合用,表示在每次反复的间隔休眠S秒<br><br>       -v, <span class="hljs-comment">--verbose</span><br>              总是输出给出文件名的首部<br><br>       <span class="hljs-comment">--help 显示帮助信息后退出</span><br><br>       <span class="hljs-comment">--version</span><br>              输出版本信息后退出<br></code></pre></td></tr></table></figure><p>有tail多个选项的具体用法，例如 -n  表示输出最后N行,默认的最后10行，也可以指定行数</p><p><img src="image-20220730172938650.png" alt="image-20220730172938650"></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">AUTHOR</span>(作<br>       Paul Rubin, David MacKenzie, Ian Lance Taylor和Jim Meyering.<br><br>REPORTING BUGS (报<br>       请报告bugs到&lt;bug-textutils<span class="hljs-variable">@gnu</span>.org&gt;.<br><br>COPYRIGHT(版<br>       Copyright © <span class="hljs-number">1999</span> Free Software Foundation, Inc.<br>       This is free software; see the source for copying conditions.  There is NO warranty; <span class="hljs-keyword">not</span> even for MERCHANTABILITY <span class="hljs-keyword">or</span> FITNESS FOR A PARTICULAR PURPOSE.<br><br>SEE ALSO (另<br>       tail 的完整文档是以Texinfo手册形式维护的.  如果 info 和 tail 程序在你那儿都已经安装好了,那么命令<br><br>              info tail<br><br>       应该会让你访问到整篇手册.<br><br><br>[中<br>       riser &lt;boomer<span class="hljs-variable">@ccidnet</span>.com&gt;<br><br>[中<br>       <span class="hljs-number">2001</span>/<span class="hljs-number">08</span>/<span class="hljs-number">08</span><br><br>《<br>       <span class="hljs-attribute">http</span>:<span class="hljs-comment">//cmpp.linuxforum.net</span><br><br><br><br>GNU textutils <span class="hljs-number">2.0</span>a                                                                                                                                              <span class="hljs-number">1999</span>年<span class="hljs-number">12</span>月                                                                                         <br></code></pre></td></tr></table></figure><p>后面的是类似作者，位置信息等一般不会使用</p><h1 id="4）根据语法部分-简要的写几个操作。"><a href="#4）根据语法部分-简要的写几个操作。" class="headerlink" title="4）根据语法部分 简要的写几个操作。"></a>4）根据语法部分 简要的写几个操作。</h1><p>已tail命令为例</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">tail  -f  <span class="hljs-regexp">/var/</span>log/messages         <span class="hljs-comment">#动态查看系统的日志信息</span><br></code></pre></td></tr></table></figure><p><img src="image-20220730173538886.png" alt="image-20220730173538886"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tail</span>  -n  <span class="hljs-number">5</span>                     #查看文件的最后<span class="hljs-number">5</span>行<br></code></pre></td></tr></table></figure><p><img src="image-20220730173634309.png" alt="image-20220730173634309"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">tail</span>  --version        <span class="hljs-comment">#查看版本信息</span><br></code></pre></td></tr></table></figure><p><img src="image-20220730173759213.png" alt="image-20220730173759213"></p><h1 id="4-切换到-etc-目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。"><a href="#4-切换到-etc-目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。" class="headerlink" title="4.切换到/etc/目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。"></a>4.切换到/etc/目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。</h1><p> fstab文件包含了需要挂载的设备，相应的挂载点，以及属性等信息</p><p>查看fstab</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat  <span class="hljs-regexp">/etc/</span>fstab<br></code></pre></td></tr></table></figure><p><img src="image-20220730174037590.png" alt="image-20220730174037590"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">设备名   目录挂载点  文件系统  挂载参数  (<span class="hljs-number">0.1</span>)是否开始备份  (<span class="hljs-number">0.1</span>.<span class="hljs-number">2</span>)开机是否检测磁盘<br><span class="hljs-regexp">/dev/</span>vdb2  /bj     ext4   defaults      <span class="hljs-number">0</span>                 <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>第一列为mount命令所挂载的设备名,如/dev/mapper/rhel-root </p><p>第二列为mount命令的挂载点。挂载点必须是一个已存在的目录，如根目录。</p><p>第三列为文件系统的类型可以根据设备分区文件系统进行填写，如xfs分区，swap交换分区，ext4分区等等。</p><p>第四列为mount命令的选项即挂载参数。</p><p>这里的defaults表示：rw, suid, dev, exec, auto, nouser, and async。</p><p>rw表示文件系统可以读写。</p><p>suid表示当前用户权限和创建该文件的用户权限一样。</p><p>dev表示识别文件系统中的字符设备和块设备。与其对应的是nodev。</p><p>exec表示可以在设备上运行二进制文件。与其对应的是noexec。</p><p>auto表示执行mount -a是会执行该条目。与其对应的是noauto。</p><p>nosuer表示只有root才能挂载该设备。与其对应的是user。</p><p>async表示对该设备的写入操作不会立刻写入设备，而在随后的某个时刻写入。与其对应的是sync。</p><p>第五列表示是否使用dump备份该文件系统，如果是0，dump将忽略该文件系统。大多数情况下该列都为0.</p><p>第六列表示是否检验扇区：开机的过程中，系统默认会以fsck检验我们系统是否为完整。0表示不检测，1 最早检验（一般根目录会选择最早检验）2 1级别检验完成后进行检验</p><h1 id="5-简要说明FHS结构"><a href="#5-简要说明FHS结构" class="headerlink" title="5.简要说明FHS结构"></a>5.简要说明FHS结构</h1><p>FHS 表示文件系统层级结构</p><p><img src="image-20220730175442266.png" alt="image-20220730175442266"></p><p><img src="image-20220730175240992.png" alt="image-20220730175240992"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs bash">/<br>根目录，所有的目录、文件、设备都在/之下<br><br>/boot<br><br>开机所需文件—内核、开机菜单以及所需配置文件等<br><br>/dev<br><br>以文件形式存放任何设备与接口<br><br>/etc<br><br>配置文件。如账号密码文件、 各种服务的启始档等。FHS建议几个重要的目录最好要存在 /etc/ 目录下，/etc/opt(必要)：这个目录在放置第三方协力软件 /opt 的相关配置文件， /etc/X11/(建议)：与 X Window 有关的各种配置文件都在这里，/etc/sgml/(建议)：与 SGML 格式有关的各项配置文件，/etc/xml/(建议)：与 XML 格式有关的各项配置文件<br><br>/home<br><br>用户家目录。新增用户账号默认匹配此目录。<br><br>/bin<br><br>存放单用户模式下还可以操作的命令<br><br>/lib<br><br>开机时用到的函数库，以及/bin 与/sbin 下面的命令要调用的函数<br><br>/sbin<br><br>开机过程中需要的命令。包括了开机、修复、还原系统所需要的指令。<br><br>/media<br><br>用于挂载设备文件的目录<br><br>/opt<br><br>放置第三方的软件<br><br>/root<br><br>系统管理员的家目录<br><br>/srv<br><br>一些网络服务的数据文件目录。常见的服务例如 WWW, FTP 等等。<br><br>/tmp<br><br>任何人均可使用的“共享”临时目录。一般用户或者是正在执行的程序暂时放置文件的地方。<br><br>/usr/local<br><br>用户自行安装的软件<br><br>/usr/sbin<br><br>Linux 系统开机时不会使用到的软件/命令/脚本<br><br>/usr/share<br><br>帮助与说明文件，也可放置共享文件<br><br>/var<br><br>主要存放经常变化的文件，如日志。<br><br>/proc<br><br>虚拟文件系统，例如系统内核、进程、外部设备及网络状态等。此目录本身是一个虚拟文件系统(virtual filesystem)，放置的数据都是在内存当中， 例如系统核心、行程信息(process)、周边装置的状态及网络状态等等。<br><br></code></pre></td></tr></table></figure><h1 id="6-用自己的理解总结-文件管理，用户管理，组用户，权限管理相关的命令。"><a href="#6-用自己的理解总结-文件管理，用户管理，组用户，权限管理相关的命令。" class="headerlink" title="6.用自己的理解总结 文件管理，用户管理，组用户，权限管理相关的命令。"></a>6.用自己的理解总结 文件管理，用户管理，组用户，权限管理相关的命令。</h1><p>用户管理：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs diff">用户类型：<br>管理员用户 root<br>普通用户：系统用户/程序用户(为某一程序专门使用的用户)<br>windos旗舰版下创建用户，计算机右键管理，本地用户和组里可以创建用户<br><br>与用户相关的文件<br>/etc/passwd<br>用户名 密码占位符 uid 基本组id 用户描述 家目录  shell<br>shell：<br>/bin/bash 默认格式<br>/sbin/nologin 禁止登录，一般为系统用户使用<br>0-999位系统用户uid <br>/etc/shadow<br>用户名 密码 最短密码时间 密码过期时间提示<br>用户组<br>基本组/附加组，基本组只能有一个，附加组可以有多个<br><br>创建用户 usetadd   [选项] 用户名称<br>useradd zabbix 创建一个zabbix用户<br>会自动创建家目录<br>/etc/passwd会有数据<br>/etc/shadow会有数据<br>/var/spool/mail会有数据，此路径为给用户发送邮件保存的路径<br><br>useradd  -u 2000 user1  指定uid为2000<br><span class="hljs-deletion">-g 指定用户基本组  (组必须存在)</span><br><span class="hljs-deletion">-G 指定用户的附加组 (组必须存在)</span><br><span class="hljs-deletion">-s 用户登录的shell</span><br><span class="hljs-deletion">- M不创建家目录</span><br><span class="hljs-deletion">-r 创建一个系统用户，并没有家目录</span><br><span class="hljs-deletion">-d 指定一个目录作为用户家目录</span><br><br>切换用户 su - 用户名<br>su - zabbix 切换到zabbix用户<br>带-时所在目录也会切换<br><br>删除用户：userdel  用户名<br><span class="hljs-deletion">-r  删除用户的同时删除家目录</span><br><br>显示用户id信息 id 用户名<br><span class="hljs-deletion">-u 只显示用户uid</span><br><br><br>设置用户密码 passwd  用户名<br><span class="hljs-deletion">-S 查看用户密码状态</span><br><span class="hljs-deletion">-l 锁定一个用户密码</span><br><span class="hljs-deletion">-u 解锁用户密码</span><br><span class="hljs-deletion">-e  强制用户密码过期</span><br><br>修改用户信息<br>usermod  用户名<br><span class="hljs-deletion">-u 改用户的uid</span><br><span class="hljs-deletion">-g  修改用户的基本组</span><br><span class="hljs-deletion">-G  修改用户的附加组</span><br><span class="hljs-deletion">-aG  追加附加组</span><br>usermod  -G  附加组名  用户名<br></code></pre></td></tr></table></figure><p>组用户</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs ldif">用户类型：<br>管理员用户组： root<br>普通用户组：系统组（对守护进程获取资源进行权限分配）/普通组（用户使用）<br><br>与用户组相关的文件<br>/etc/group：组及其属性信息<br>群组名称 群组密码 GID 以当前组为附加组的用户列表(分隔符为逗号)<br>/etc/gshadow：组密码及其相关属性<br>群组名称 群组密码 组管理员列表 以当前组为附加组的用户列表：多个用户间用逗号分隔<br><br>groupadd实现创建组<br><span class="hljs-literal">-</span>g GID 指明GID号；[GID_MIN, GID_MAX]<br><span class="hljs-literal">-</span>r 创建系统组，CentOS 6之前: ID&lt;500，CentOS 7以后: ID&lt;1000<br><br>groupmod 组属性修改<br><span class="hljs-literal">-</span>n group_name: 新名字<br><span class="hljs-literal">-</span>g GID: 新的GID<br><br>groupdel 可以删除组<br><span class="hljs-literal">-</span>f, --force 强制删除，即使是用户的主组也强制删除组,但会导致无主组的用户不可用无法登录<br><br>gpasswd命令，可以更改组密码，也可以修改附加组的成员关系<br><span class="hljs-literal">-</span>a user 将user添加至指定组中<br><span class="hljs-literal">-</span>d user 从指定附加组中移除用户user<br><span class="hljs-literal">-</span>A user1,user2,... 设置有管理权限的用户列表<br><br>groupmems 可以管理附加组的成员关系<br><span class="hljs-literal">-</span>g, --group groupname  <span class="hljs-comment">#更改为指定组 (只有root)</span><br><span class="hljs-literal">-</span>a, --add username   <span class="hljs-comment">#指定用户加入组</span><br><span class="hljs-literal">-</span>d, --delete username <span class="hljs-comment">#从组中删除用户</span><br><span class="hljs-literal">-</span>p, --purge        <span class="hljs-comment">#从组中清除所有成员</span><br><span class="hljs-literal">-</span>l,  --list         <span class="hljs-comment">#显示组成员列表</span><br><br>groups 可查看用户组关系<br><br></code></pre></td></tr></table></figure><p>文件管理</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs ldif">文件权限分为三种<br>owner 属主, u<br>group 属组, g<br>other 其他, o<br><br>chown 命令可以修改文件的属主，也可以修改文件属组<br>OWNER  <span class="hljs-comment">#只修改所有者</span><br><span class="hljs-attribute">OWNER</span>:GROUP <span class="hljs-comment">#同时修改所有者和属组</span><br>:GROUP  <span class="hljs-comment">#只修改属组，冒号也可用 . 替换</span><br><span class="hljs-literal">-</span>-reference=RFILE  <span class="hljs-comment">#参考指定的的属性，来修改 </span><br><span class="hljs-literal">-</span>R <span class="hljs-comment">#递归，此选项慎用，非常危险！</span><br><br>chgrp 命令可以只修改文件的属组<br><span class="hljs-literal">-</span>R <span class="hljs-comment">#递归</span><br><br>chmod 命令可以修改文件的权限<br><span class="hljs-attribute">who</span>:u,g,o,a<br><span class="hljs-attribute">opt</span>:+,-,=<br><span class="hljs-attribute">permission</span>:r,w,x<br>修改指定一类用户的所有权限<br>u=  g= o= ug=  a= u=,g=<br>修改指定一类用户某个或某个权限<br>u+ u- g+ g- o+ o- a+ a- + -<br><span class="hljs-literal">-</span>R: 递归修改权限<br></code></pre></td></tr></table></figure><p>权限管理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs bash">文件的权限<br>r 可使用文件查看类工具，比如：<span class="hljs-built_in">cat</span>，可以获取其内容<br>w 可修改其内容,文件的是否被删除和文件的权限无关<br>x 可以把此文件提请内核启动为一个进程，即可以执行（运行）此文件（此文件的内容必须是可执行）<br>文件权限常见组合<br>--- 0<br>r  4<br>r-x 5<br>rw 6<br>rwx 7<br><br>目录的权限<br>r 可以使用<span class="hljs-built_in">ls</span>查看此目录中文件名列表,但无法看到文件的属性meta信息,包括inode号,不能查看文件的<br>内容<br>w 可在此目录中创建文件，也可删除此目录中的文件，而和此被删除的文件的权限无关<br>x 可以<span class="hljs-built_in">cd</span>进入此目录，可以使用<span class="hljs-built_in">ls</span> -l file或<span class="hljs-built_in">stat</span> file 查看此目录中指定文件的元数据，当预先知<br>道文件名称时,也可以查看文件的内容,属于目录的可访问的最小权限<br>X 分配给目录或有部分x权限的文件的x权限，对无任意x权限的文件则不会分配x权限<br>目录权限常见组合<br>-  不能访问目录<br>r-x 只读目录<br>rwx 可读也可写目录<br><br><span class="hljs-built_in">chmod</span> 命令可以修改文件的权限<br><span class="hljs-built_in">who</span>:u,g,o,a<br>opt:+,-,=<br>permission:r,w,x<br>修改指定一类用户的所有权限<br>u=  g= o= ug=  a= u=,g=<br>修改指定一类用户某个或某个权限<br>u+ u- g+ g- o+ o- a+ a- + -<br>-R: 递归修改权限<br><br><span class="hljs-built_in">umask</span> 的值可以用来保留在创建文件权限<br>非特权用户<span class="hljs-built_in">umask</span>默认是 002<br>root的<span class="hljs-built_in">umask</span> 默认是 022<br>查看<span class="hljs-built_in">umask</span>   <span class="hljs-built_in">umask</span> –S<br>修改<span class="hljs-built_in">umask</span>   <span class="hljs-built_in">umask</span> <span class="hljs-comment">#</span><br><br>特殊权限<br>SUID 作用于二进制可执行文件上,用户将继承此程序所有者的权限<br>SGID<br>作用于二进制可执行文件上,用户将继承此程序所有组的权限<br>作于于目录上, 此目录中新建的文件的所属组将自动从此目录继承<br>STICKY 作用于目录上,此目录中的文件只能由所有者自已来删除<br><br><br>SUID<br><span class="hljs-built_in">chmod</span> u+s FILE... <br><span class="hljs-built_in">chmod</span> 4xxx FILE<br><span class="hljs-built_in">chmod</span> u-s FILE...<br><br>SGID<br><span class="hljs-built_in">chmod</span> g+s FILE...<br><span class="hljs-built_in">chmod</span> 2xxx FILE<br><span class="hljs-built_in">chmod</span> g-s FILE...<br><br>STICKY<br><span class="hljs-built_in">chmod</span> o+t DIR...<br><span class="hljs-built_in">chmod</span> 1xxx DIR<br><span class="hljs-built_in">chmod</span> o-t DIR...<br><br>设置文件的特殊属性，可以访问 root 用户误操作删除或修改文件,不能删除，改名，更改<br>chattr +i file<br>只能追加内容，不能删除，改名<br>chattr +a file<br><br><br><br>ACL：Access Control List，实现灵活的权限管理<br>除了文件的所有者，所属组和其它人，可以对更多的用户设置权限<br>CentOS7 默认创建的xfs和ext4文件系统具有ACL功能<br>CentOS7 之前版本，默认手工创建的ext4文件系统无ACL功能,需手动增加<br><br>setfacl 可设置ACL权限<br>getfacl 可查看设置的ACL权限<br><br><br>mask 权限<br>mask只影响除所有者和other的之外的人和组的最大权限<br>mask需要与用户的权限进行逻辑与运算后，才能变成有限的权限(Effective Permission)<br>用户或组的设置必须存在于mask权限设定范围内才会生效<br>setfacl -m mask::rx file<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
